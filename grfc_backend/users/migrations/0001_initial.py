# Generated by Django 4.1.2 on 2022-12-05 08:48

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_who', models.IntegerField(default=1)),
                ('crated_at', models.DateField(auto_now_add=True)),
                ('updated_who', models.IntegerField(default=1)),
                ('updated_at', models.DateField(auto_now=True)),
                ('deleted_who', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateField(blank=True, null=True)),
                ('name', models.CharField(max_length=200, verbose_name='Пункт меню')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.menu')),
            ],
            options={
                'db_table': 'menu',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_who', models.IntegerField(default=1)),
                ('crated_at', models.DateField(auto_now_add=True)),
                ('updated_who', models.IntegerField(default=1)),
                ('updated_at', models.DateField(auto_now=True)),
                ('deleted_who', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('title_r', models.CharField(max_length=200, verbose_name='Наименование род. падеж')),
                ('title_d', models.CharField(max_length=200, verbose_name='Наименование дат. падеж')),
                ('title_t', models.CharField(max_length=200, verbose_name='Наименование твор. падеж')),
            ],
            options={
                'db_table': 'position',
            },
        ),
        migrations.CreateModel(
            name='Subdivision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_who', models.IntegerField(default=1)),
                ('crated_at', models.DateField(auto_now_add=True)),
                ('updated_who', models.IntegerField(default=1)),
                ('updated_at', models.DateField(auto_now=True)),
                ('deleted_who', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('full_title', models.CharField(max_length=400)),
                ('full_title_r', models.CharField(max_length=400)),
                ('full_title_d', models.CharField(max_length=400)),
                ('full_title_t', models.CharField(max_length=400)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.subdivision')),
            ],
            options={
                'db_table': 'subdivision',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_who', models.IntegerField(default=1)),
                ('crated_at', models.DateField(auto_now_add=True)),
                ('updated_who', models.IntegerField(default=1)),
                ('updated_at', models.DateField(auto_now=True)),
                ('deleted_who', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('menu', models.ManyToManyField(to='users.menu')),
            ],
            options={
                'db_table': 'role',
            },
        ),
        migrations.CreateModel(
            name='GrfcUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_who', models.IntegerField(default=1)),
                ('crated_at', models.DateField(auto_now_add=True)),
                ('updated_who', models.IntegerField(default=1)),
                ('updated_at', models.DateField(auto_now=True)),
                ('deleted_who', models.IntegerField(blank=True, null=True)),
                ('deleted_at', models.DateField(blank=True, null=True)),
                ('patronymic', models.CharField(blank=True, max_length=200, null=True, verbose_name='Отчество')),
                ('username', models.CharField(max_length=200, unique=True, verbose_name='Имя пользователя')),
                ('fio', models.CharField(max_length=200, verbose_name='ФИО')),
                ('fio_r', models.CharField(max_length=200, verbose_name='ФИО род. падеж')),
                ('fio_d', models.CharField(max_length=200, verbose_name='ФИО дат. падеж')),
                ('fio_t', models.CharField(max_length=200, verbose_name='ФИО твор. падеж')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.position')),
                ('role', models.ManyToManyField(to='users.role')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
